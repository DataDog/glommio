# Glommio Circle-CI configuration file

version: 2.1

orbs:
  rust: circleci/rust@1.5.0

jobs:
  fmt:
    docker:
      - image: cimg/rust:1.53
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install nightly for rustfmt features
          command: |
            FMT_NIGHTLY=nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/rustfmt)
            rustup install nightly
            rustup default "$FMT_NIGHTLY"
            rustup component add rustfmt
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v5-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Check formatting
          command: cargo fmt --all -- --check
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v5-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}

  doc:
    docker:
      - image: cimg/rust:1.53
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install cargo-deadlinks
          command: cargo install cargo-deadlinks
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v5-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Generate documentation
          command: cargo doc --all-features
          # temporarily disabled.
          # - run:
          # name: Validate links
          # command: cargo deadlinks --dir target/doc/glommio
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v5-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}

  clippy:
    docker:
      - image: cimg/rust:1.53
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install clippy
          command: rustup component add clippy
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v5-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Run linters
          command: cargo clippy -- -D warnings
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v5-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}

  build:
    machine:
      image: ubuntu-2004:202104-01
    steps:
      - checkout
      - rust/install
      - run:
          name: Version information
          command: cat /proc/version; rustc --version; cargo --version; rustup --version
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v5-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets
          command: cargo build --all --all-targets
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v5-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}

  test:
    machine:
      image: ubuntu-2004:202104-01
    steps:
      - checkout
      - rust/install
      - run:
          name: Version information
          command: cat /proc/version; rustc --version; cargo --version; rustup --version
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - run:
          name: Set limits
          command: ulimit -Sl 512; ulimit -Hl 512
      - restore_cache:
          keys:
            - v5-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Test all targets
          command: cargo test --all-features
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v5-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}

workflows:
  unit_tests:
    jobs:
      - fmt
      - clippy
      - doc
      - build
